https://quizlet.com/_aidj9j?x=1jqt&i=426q4l

algorithm
precise sequence of instruction to solve problem

recursion
function call itself; solve problem where solution depend on solution to smaller instance of same problem

divide and conquer
original problem divided into sub problem and solved with recursion; then combine solution of subproblem to solve original problem

backtrack
utilize recursion to explore all answer until best result then reverse to root node

permutation
order of item matter

combination
order of item does not matter

subsequence
derived from another sequence without change order of remain item

spanning tree
subgraph of graph which include all vertice of graph convert into tree

cyclic
graph return to root node; with cycle

acyclic
graph with no root node; without cycle

sort algorithm
arrange item of list in specific order

insertion sort
remove one item from input data and insert within sorted list; repeat until no input item remain

selection sort
smallest item selected from unsorted list and swapped with leftmost item to become sorted list

merge sort
unsorted list split into two halves; sort list then combine list

quick sort
select pivot item from list and divide remain item into less or greater than pivot item; then sort with recursion

bucket sort
distribute item list into number of bucket; then sort each bucket with recursion or sort algorithm

bubble sort
iterate through list then switch item in wrong order; execute pass through list when complete

counting sort
count number of item with selected value then calculate prefix sum to determine position of each value in output sequence

search algorithm
retrieve information stored within some data structure, or calculated in search space of domain

breadth-first search
one node search then adjacent node are search and store within queue; calculate shortest path within graph

depth-first search
root node start then explore all node within each branch until backtrack; store within stack, can visit twice

binary seach
search ordered list, when median item less than selected item then repeat divide list in half and search upper half until selected item found

linear search
search unordered list in order until selected item found or all item have been searched

hash search
search data from table pair index

dynamic programming
divide complex problem into simpler subproblem then solve with recursion

tabulation dynamic program
bottom up computation

memoization dynamic program
top down computation

string match
match short pattern to string

string parse
extract string from file or network and process to extract information

greedy algorithm
build individual piece solution; choose next piece that offer most obvious and immediate benefit

bellman ford
minimum span tree traverse between two vertice in weighted graph with positive or negative edge weight

kruskal
minimum span tree traverse node once; start from minimum weight vertice

dijkstra
search shortest path between two node

prim
minimum span tree traverse node more than once; start from any node

floyd marshall
minimum span tree traverse through all pair of vertice in weighted graph with positive or negative edge weight
